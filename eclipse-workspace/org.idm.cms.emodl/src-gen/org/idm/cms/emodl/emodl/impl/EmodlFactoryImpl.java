/**
 * generated by Xtext 2.37.0
 */
package org.idm.cms.emodl.emodl.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.idm.cms.emodl.emodl.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class EmodlFactoryImpl extends EFactoryImpl implements EmodlFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static EmodlFactory init()
  {
    try
    {
      EmodlFactory theEmodlFactory = (EmodlFactory)EPackage.Registry.INSTANCE.getEFactory(EmodlPackage.eNS_URI);
      if (theEmodlFactory != null)
      {
        return theEmodlFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new EmodlFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EmodlFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case EmodlPackage.MODEL: return createModel();
      case EmodlPackage.IMPORT: return createImport();
      case EmodlPackage.IMPORT_GROUP: return createImportGroup();
      case EmodlPackage.START_MODEL: return createStartModel();
      case EmodlPackage.ELEMENT: return createElement();
      case EmodlPackage.SPECIES: return createSpecies();
      case EmodlPackage.PARAMETER: return createParameter();
      case EmodlPackage.FUNCTION: return createFunction();
      case EmodlPackage.OBSERVABLE: return createObservable();
      case EmodlPackage.REACTION: return createReaction();
      case EmodlPackage.STATE_EVENT: return createStateEvent();
      case EmodlPackage.TIME_EVENT: return createTimeEvent();
      case EmodlPackage.LOCALE: return createLocale();
      case EmodlPackage.SET_LOCALE: return createSetLocale();
      case EmodlPackage.JSON: return createJson();
      case EmodlPackage.VARIABLE_VALUE_PAIRS: return createVariableValuePairs();
      case EmodlPackage.VARIABLE_VALUE_PAIR: return createVariableValuePair();
      case EmodlPackage.EXPRESSION: return createExpression();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Import createImport()
  {
    ImportImpl import_ = new ImportImpl();
    return import_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ImportGroup createImportGroup()
  {
    ImportGroupImpl importGroup = new ImportGroupImpl();
    return importGroup;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StartModel createStartModel()
  {
    StartModelImpl startModel = new StartModelImpl();
    return startModel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Element createElement()
  {
    ElementImpl element = new ElementImpl();
    return element;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Species createSpecies()
  {
    SpeciesImpl species = new SpeciesImpl();
    return species;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Parameter createParameter()
  {
    ParameterImpl parameter = new ParameterImpl();
    return parameter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Function createFunction()
  {
    FunctionImpl function = new FunctionImpl();
    return function;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Observable createObservable()
  {
    ObservableImpl observable = new ObservableImpl();
    return observable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Reaction createReaction()
  {
    ReactionImpl reaction = new ReactionImpl();
    return reaction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StateEvent createStateEvent()
  {
    StateEventImpl stateEvent = new StateEventImpl();
    return stateEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TimeEvent createTimeEvent()
  {
    TimeEventImpl timeEvent = new TimeEventImpl();
    return timeEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Locale createLocale()
  {
    LocaleImpl locale = new LocaleImpl();
    return locale;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SetLocale createSetLocale()
  {
    SetLocaleImpl setLocale = new SetLocaleImpl();
    return setLocale;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Json createJson()
  {
    JsonImpl json = new JsonImpl();
    return json;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VariableValuePairs createVariableValuePairs()
  {
    VariableValuePairsImpl variableValuePairs = new VariableValuePairsImpl();
    return variableValuePairs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VariableValuePair createVariableValuePair()
  {
    VariableValuePairImpl variableValuePair = new VariableValuePairImpl();
    return variableValuePair;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression createExpression()
  {
    ExpressionImpl expression = new ExpressionImpl();
    return expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EmodlPackage getEmodlPackage()
  {
    return (EmodlPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static EmodlPackage getPackage()
  {
    return EmodlPackage.eINSTANCE;
  }

} //EmodlFactoryImpl
