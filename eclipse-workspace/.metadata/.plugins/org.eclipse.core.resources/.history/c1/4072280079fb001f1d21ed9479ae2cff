grammar org.idm.cms.emodl.Emodl with org.eclipse.xtext.common.Terminals

generate emodl "http://www.idm.org/cms/emodl/Emodl"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Model:
    imports+=Import*
    (startModel=StartModel)?
    elements+=Element*
    (endModel=EndModel)?;

Import:
    '(import' imports+=ImportGroup+ ')';

ImportGroup:
    {ImportGroup} '(' importName+=ID (importName+=ID)* ')';

StartModel:
    '(start-model' name=STRING ')';

EndModel:
    '(end-model)';

Element hidden(INLINE_COMMENT, WS):
    Species | Parameter | Function | Observable | Reaction | StateEvent | TimeEvent | Locale | SetLocale | Json;

Species:
    '(species' name=ID initialPopulation=NUMBER ')';

Parameter:
    '(param' name=ID value=NUMBER ')';

Function:
    '(func' name=ID expression=Expression ')';

Observable:
    '(observe' name=ID expression=Expression ')';

Reaction:
    '(reaction' name=ID
        '(' inputSpecies+=[Species]* ')'
        '(' outputSpecies+=[Species]* ')'
        propensityFunction=Expression
    ')';

StateEvent:
    '(state-event' name=ID predicate=Expression variableValuePairs=VariableValuePairs ')';

TimeEvent:
    '(time-event' name=ID time=NUMBER (iterations=INT)? variableValuePairs=VariableValuePairs ')';

Locale:
    '(locale' name=ID ')';

SetLocale:
    '(set-locale' name=ID ')';

Json:
    '(json' name=ID file=STRING ')';

VariableValuePairs:
    '(' (variableValuePairs+=VariableValuePair)+ ')';

VariableValuePair:
    '(' variable=ID value=Expression ')';
    
Expression:
    {Expression} expression=BinaryOperation |  '(' expression=Expression ')'| name=Literal;

BinaryOperation returns Expression:
    '(' operator=BinaryOperator left=Expression right=Expression ')';
    

Literal:
    ID | NUMBER;
   
BinaryOperator:
    '+' | '-' | '*' | '/' | '^' | 'min' | 'max';

terminal NUMBER returns ecore::EDouble:
    '-'? INT ('.' INT)?;


terminal INLINE_COMMENT:
    ('#'|';') !('\n' | '\r')* ('\r'? '\n')?;
   
	