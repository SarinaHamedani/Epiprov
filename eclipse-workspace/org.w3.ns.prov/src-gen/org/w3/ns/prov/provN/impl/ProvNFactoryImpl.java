/**
 * generated by Xtext 2.37.0
 */
package org.w3.ns.prov.provN.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.w3.ns.prov.provN.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class ProvNFactoryImpl extends EFactoryImpl implements ProvNFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static ProvNFactory init()
  {
    try
    {
      ProvNFactory theProvNFactory = (ProvNFactory)EPackage.Registry.INSTANCE.getEFactory(ProvNPackage.eNS_URI);
      if (theProvNFactory != null)
      {
        return theProvNFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new ProvNFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ProvNFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case ProvNPackage.DOCUMENT: return createDocument();
      case ProvNPackage.MODEL: return createModel();
      case ProvNPackage.NAMESPACE: return createNamespace();
      case ProvNPackage.STATEMENT: return createStatement();
      case ProvNPackage.ENTITY: return createEntity();
      case ProvNPackage.ACTIVITY: return createActivity();
      case ProvNPackage.AGENT: return createAgent();
      case ProvNPackage.RELATION: return createRelation();
      case ProvNPackage.WAS_DERIVED_FROM: return createWasDerivedFrom();
      case ProvNPackage.WAS_GENERATED_BY: return createWasGeneratedBy();
      case ProvNPackage.USED: return createUsed();
      case ProvNPackage.WAS_ASSOCIATED_WITH: return createWasAssociatedWith();
      case ProvNPackage.WAS_ATTRIBUTED_TO: return createWasAttributedTo();
      case ProvNPackage.HAD_MEMBER: return createHadMember();
      case ProvNPackage.ATTRIBUTE: return createAttribute();
      case ProvNPackage.DATE_TIME: return createDateTime();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Document createDocument()
  {
    DocumentImpl document = new DocumentImpl();
    return document;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Namespace createNamespace()
  {
    NamespaceImpl namespace = new NamespaceImpl();
    return namespace;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Statement createStatement()
  {
    StatementImpl statement = new StatementImpl();
    return statement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Entity createEntity()
  {
    EntityImpl entity = new EntityImpl();
    return entity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Activity createActivity()
  {
    ActivityImpl activity = new ActivityImpl();
    return activity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Agent createAgent()
  {
    AgentImpl agent = new AgentImpl();
    return agent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Relation createRelation()
  {
    RelationImpl relation = new RelationImpl();
    return relation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public WasDerivedFrom createWasDerivedFrom()
  {
    WasDerivedFromImpl wasDerivedFrom = new WasDerivedFromImpl();
    return wasDerivedFrom;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public WasGeneratedBy createWasGeneratedBy()
  {
    WasGeneratedByImpl wasGeneratedBy = new WasGeneratedByImpl();
    return wasGeneratedBy;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Used createUsed()
  {
    UsedImpl used = new UsedImpl();
    return used;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public WasAssociatedWith createWasAssociatedWith()
  {
    WasAssociatedWithImpl wasAssociatedWith = new WasAssociatedWithImpl();
    return wasAssociatedWith;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public WasAttributedTo createWasAttributedTo()
  {
    WasAttributedToImpl wasAttributedTo = new WasAttributedToImpl();
    return wasAttributedTo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public HadMember createHadMember()
  {
    HadMemberImpl hadMember = new HadMemberImpl();
    return hadMember;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Attribute createAttribute()
  {
    AttributeImpl attribute = new AttributeImpl();
    return attribute;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DateTime createDateTime()
  {
    DateTimeImpl dateTime = new DateTimeImpl();
    return dateTime;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ProvNPackage getProvNPackage()
  {
    return (ProvNPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static ProvNPackage getPackage()
  {
    return ProvNPackage.eINSTANCE;
  }

} //ProvNFactoryImpl
