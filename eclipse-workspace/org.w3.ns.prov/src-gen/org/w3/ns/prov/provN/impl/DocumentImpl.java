/**
 * generated by Xtext 2.37.0
 */
package org.w3.ns.prov.provN.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.w3.ns.prov.provN.Document;
import org.w3.ns.prov.provN.Model;
import org.w3.ns.prov.provN.ProvNPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Document</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.w3.ns.prov.provN.impl.DocumentImpl#getCompartmentalModel <em>Compartmental Model</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DocumentImpl extends MinimalEObjectImpl.Container implements Document
{
  /**
   * The cached value of the '{@link #getCompartmentalModel() <em>Compartmental Model</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCompartmentalModel()
   * @generated
   * @ordered
   */
  protected Model compartmentalModel;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DocumentImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ProvNPackage.Literals.DOCUMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Model getCompartmentalModel()
  {
    return compartmentalModel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCompartmentalModel(Model newCompartmentalModel, NotificationChain msgs)
  {
    Model oldCompartmentalModel = compartmentalModel;
    compartmentalModel = newCompartmentalModel;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ProvNPackage.DOCUMENT__COMPARTMENTAL_MODEL, oldCompartmentalModel, newCompartmentalModel);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCompartmentalModel(Model newCompartmentalModel)
  {
    if (newCompartmentalModel != compartmentalModel)
    {
      NotificationChain msgs = null;
      if (compartmentalModel != null)
        msgs = ((InternalEObject)compartmentalModel).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ProvNPackage.DOCUMENT__COMPARTMENTAL_MODEL, null, msgs);
      if (newCompartmentalModel != null)
        msgs = ((InternalEObject)newCompartmentalModel).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ProvNPackage.DOCUMENT__COMPARTMENTAL_MODEL, null, msgs);
      msgs = basicSetCompartmentalModel(newCompartmentalModel, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ProvNPackage.DOCUMENT__COMPARTMENTAL_MODEL, newCompartmentalModel, newCompartmentalModel));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ProvNPackage.DOCUMENT__COMPARTMENTAL_MODEL:
        return basicSetCompartmentalModel(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ProvNPackage.DOCUMENT__COMPARTMENTAL_MODEL:
        return getCompartmentalModel();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ProvNPackage.DOCUMENT__COMPARTMENTAL_MODEL:
        setCompartmentalModel((Model)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ProvNPackage.DOCUMENT__COMPARTMENTAL_MODEL:
        setCompartmentalModel((Model)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ProvNPackage.DOCUMENT__COMPARTMENTAL_MODEL:
        return compartmentalModel != null;
    }
    return super.eIsSet(featureID);
  }

} //DocumentImpl
