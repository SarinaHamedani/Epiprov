/*
 * generated by Xtext 2.37.0
 */
package org.w3.ns.prov.formatting2;

import org.eclipse.xtext.formatting2.AbstractJavaFormatter;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.formatting2.IHiddenRegionFormatter;
import org.eclipse.xtext.formatting2.regionaccess.ISemanticRegion;
import org.w3.ns.prov.provN.Document;
import org.w3.ns.prov.provN.Model;
import org.w3.ns.prov.provN.Namespace;
import org.w3.ns.prov.provN.Statement;


public class ProvNFormatter extends AbstractJavaFormatter {

	protected void format(Document document, IFormattableDocument doc) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
        ISemanticRegion documentKeyword = textRegionExtensions.regionFor(document).keyword("document");
        if (documentKeyword != null) {
            doc.append(documentKeyword, it -> it.setNewLines(1));
        }

		doc.format(document.getCompartmentalModel());
	}

	protected void format(Model model, IFormattableDocument doc) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (Namespace namespace : model.getNamespaces()) {
			doc.format(namespace);
			doc.append(namespace, IHiddenRegionFormatter::newLine);
		}
		for (Statement statement : model.getStatements()) {
			doc.format(statement);
			doc.append(statement, IHiddenRegionFormatter::newLine);
		}
		
	}
	
	// TODO: implement for Entity, Activity, Agent, WasDerivedFrom, WasGeneratedBy, Used, WasAssociatedWith, WasAttributedTo
}
