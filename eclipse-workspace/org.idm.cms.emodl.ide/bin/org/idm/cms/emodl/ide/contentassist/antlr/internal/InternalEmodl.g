/*
 * generated by Xtext 2.37.0
 */
grammar InternalEmodl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.idm.cms.emodl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.idm.cms.emodl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.idm.cms.emodl.services.EmodlGrammarAccess;

}
@parser::members {
	private EmodlGrammarAccess grammarAccess;

	public void setGrammarAccess(EmodlGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleEModel
entryRuleEModel
:
{ before(grammarAccess.getEModelRule()); }
	 ruleEModel
{ after(grammarAccess.getEModelRule()); } 
	 EOF 
;

// Rule EModel
ruleEModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEModelAccess().getGroup()); }
		(rule__EModel__Group__0)
		{ after(grammarAccess.getEModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImportGroup
entryRuleImportGroup
:
{ before(grammarAccess.getImportGroupRule()); }
	 ruleImportGroup
{ after(grammarAccess.getImportGroupRule()); } 
	 EOF 
;

// Rule ImportGroup
ruleImportGroup 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportGroupAccess().getGroup()); }
		(rule__ImportGroup__Group__0)
		{ after(grammarAccess.getImportGroupAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStartModel
entryRuleStartModel
:
{ before(grammarAccess.getStartModelRule()); }
	 ruleStartModel
{ after(grammarAccess.getStartModelRule()); } 
	 EOF 
;

// Rule StartModel
ruleStartModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStartModelAccess().getGroup()); }
		(rule__StartModel__Group__0)
		{ after(grammarAccess.getStartModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEndModel
entryRuleEndModel
:
{ before(grammarAccess.getEndModelRule()); }
	 ruleEndModel
{ after(grammarAccess.getEndModelRule()); } 
	 EOF 
;

// Rule EndModel
ruleEndModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEndModelAccess().getGroup()); }
		(rule__EndModel__Group__0)
		{ after(grammarAccess.getEndModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_INLINE_COMMENT", "RULE_WS");
}
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Element
ruleElement 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_INLINE_COMMENT", "RULE_WS");
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getAlternatives()); }
		(rule__Element__Alternatives)
		{ after(grammarAccess.getElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Entry rule entryRuleSpecies
entryRuleSpecies
:
{ before(grammarAccess.getSpeciesRule()); }
	 ruleSpecies
{ after(grammarAccess.getSpeciesRule()); } 
	 EOF 
;

// Rule Species
ruleSpecies 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSpeciesAccess().getGroup()); }
		(rule__Species__Group__0)
		{ after(grammarAccess.getSpeciesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getGroup()); }
		(rule__Parameter__Group__0)
		{ after(grammarAccess.getParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunction
entryRuleFunction
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionAccess().getGroup()); }
		(rule__Function__Group__0)
		{ after(grammarAccess.getFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObservable
entryRuleObservable
:
{ before(grammarAccess.getObservableRule()); }
	 ruleObservable
{ after(grammarAccess.getObservableRule()); } 
	 EOF 
;

// Rule Observable
ruleObservable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObservableAccess().getGroup()); }
		(rule__Observable__Group__0)
		{ after(grammarAccess.getObservableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReaction
entryRuleReaction
:
{ before(grammarAccess.getReactionRule()); }
	 ruleReaction
{ after(grammarAccess.getReactionRule()); } 
	 EOF 
;

// Rule Reaction
ruleReaction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReactionAccess().getGroup()); }
		(rule__Reaction__Group__0)
		{ after(grammarAccess.getReactionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStateEvent
entryRuleStateEvent
:
{ before(grammarAccess.getStateEventRule()); }
	 ruleStateEvent
{ after(grammarAccess.getStateEventRule()); } 
	 EOF 
;

// Rule StateEvent
ruleStateEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStateEventAccess().getGroup()); }
		(rule__StateEvent__Group__0)
		{ after(grammarAccess.getStateEventAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeEvent
entryRuleTimeEvent
:
{ before(grammarAccess.getTimeEventRule()); }
	 ruleTimeEvent
{ after(grammarAccess.getTimeEventRule()); } 
	 EOF 
;

// Rule TimeEvent
ruleTimeEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeEventAccess().getGroup()); }
		(rule__TimeEvent__Group__0)
		{ after(grammarAccess.getTimeEventAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLocale
entryRuleLocale
:
{ before(grammarAccess.getLocaleRule()); }
	 ruleLocale
{ after(grammarAccess.getLocaleRule()); } 
	 EOF 
;

// Rule Locale
ruleLocale 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLocaleAccess().getGroup()); }
		(rule__Locale__Group__0)
		{ after(grammarAccess.getLocaleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetLocale
entryRuleSetLocale
:
{ before(grammarAccess.getSetLocaleRule()); }
	 ruleSetLocale
{ after(grammarAccess.getSetLocaleRule()); } 
	 EOF 
;

// Rule SetLocale
ruleSetLocale 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetLocaleAccess().getGroup()); }
		(rule__SetLocale__Group__0)
		{ after(grammarAccess.getSetLocaleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJson
entryRuleJson
:
{ before(grammarAccess.getJsonRule()); }
	 ruleJson
{ after(grammarAccess.getJsonRule()); } 
	 EOF 
;

// Rule Json
ruleJson 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJsonAccess().getGroup()); }
		(rule__Json__Group__0)
		{ after(grammarAccess.getJsonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableValuePairs
entryRuleVariableValuePairs
:
{ before(grammarAccess.getVariableValuePairsRule()); }
	 ruleVariableValuePairs
{ after(grammarAccess.getVariableValuePairsRule()); } 
	 EOF 
;

// Rule VariableValuePairs
ruleVariableValuePairs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableValuePairsAccess().getGroup()); }
		(rule__VariableValuePairs__Group__0)
		{ after(grammarAccess.getVariableValuePairsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableValuePair
entryRuleVariableValuePair
:
{ before(grammarAccess.getVariableValuePairRule()); }
	 ruleVariableValuePair
{ after(grammarAccess.getVariableValuePairRule()); } 
	 EOF 
;

// Rule VariableValuePair
ruleVariableValuePair 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableValuePairAccess().getGroup()); }
		(rule__VariableValuePair__Group__0)
		{ after(grammarAccess.getVariableValuePairAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinaryOperation
entryRuleBinaryOperation
:
{ before(grammarAccess.getBinaryOperationRule()); }
	 ruleBinaryOperation
{ after(grammarAccess.getBinaryOperationRule()); } 
	 EOF 
;

// Rule BinaryOperation
ruleBinaryOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBinaryOperationAccess().getGroup()); }
		(rule__BinaryOperation__Group__0)
		{ after(grammarAccess.getBinaryOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteral
entryRuleLiteral
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
		(rule__Literal__Alternatives)
		{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinaryOperator
entryRuleBinaryOperator
:
{ before(grammarAccess.getBinaryOperatorRule()); }
	 ruleBinaryOperator
{ after(grammarAccess.getBinaryOperatorRule()); } 
	 EOF 
;

// Rule BinaryOperator
ruleBinaryOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBinaryOperatorAccess().getAlternatives()); }
		(rule__BinaryOperator__Alternatives)
		{ after(grammarAccess.getBinaryOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getSpeciesParserRuleCall_0()); }
		ruleSpecies
		{ after(grammarAccess.getElementAccess().getSpeciesParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getParameterParserRuleCall_1()); }
		ruleParameter
		{ after(grammarAccess.getElementAccess().getParameterParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getFunctionParserRuleCall_2()); }
		ruleFunction
		{ after(grammarAccess.getElementAccess().getFunctionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getObservableParserRuleCall_3()); }
		ruleObservable
		{ after(grammarAccess.getElementAccess().getObservableParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getReactionParserRuleCall_4()); }
		ruleReaction
		{ after(grammarAccess.getElementAccess().getReactionParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getStateEventParserRuleCall_5()); }
		ruleStateEvent
		{ after(grammarAccess.getElementAccess().getStateEventParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getTimeEventParserRuleCall_6()); }
		ruleTimeEvent
		{ after(grammarAccess.getElementAccess().getTimeEventParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getLocaleParserRuleCall_7()); }
		ruleLocale
		{ after(grammarAccess.getElementAccess().getLocaleParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getSetLocaleParserRuleCall_8()); }
		ruleSetLocale
		{ after(grammarAccess.getElementAccess().getSetLocaleParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getJsonParserRuleCall_9()); }
		ruleJson
		{ after(grammarAccess.getElementAccess().getJsonParserRuleCall_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup_0()); }
		(rule__Expression__Group_0__0)
		{ after(grammarAccess.getExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
		(rule__Expression__Group_1__0)
		{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getNameAssignment_2()); }
		(rule__Expression__NameAssignment_2)
		{ after(grammarAccess.getExpressionAccess().getNameAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getLiteralAccess().getIDTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getNUMBERTerminalRuleCall_1()); }
		RULE_NUMBER
		{ after(grammarAccess.getLiteralAccess().getNUMBERTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryOperatorAccess().getPlusSignKeyword_0()); }
		'+'
		{ after(grammarAccess.getBinaryOperatorAccess().getPlusSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorAccess().getHyphenMinusKeyword_1()); }
		'-'
		{ after(grammarAccess.getBinaryOperatorAccess().getHyphenMinusKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorAccess().getAsteriskKeyword_2()); }
		'*'
		{ after(grammarAccess.getBinaryOperatorAccess().getAsteriskKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorAccess().getSolidusKeyword_3()); }
		'/'
		{ after(grammarAccess.getBinaryOperatorAccess().getSolidusKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorAccess().getCircumflexAccentKeyword_4()); }
		'^'
		{ after(grammarAccess.getBinaryOperatorAccess().getCircumflexAccentKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorAccess().getMinKeyword_5()); }
		'min'
		{ after(grammarAccess.getBinaryOperatorAccess().getMinKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperatorAccess().getMaxKeyword_6()); }
		'max'
		{ after(grammarAccess.getBinaryOperatorAccess().getMaxKeyword_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EModel__Group__0__Impl
	rule__EModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEModelAccess().getImportsAssignment_0()); }
	(rule__EModel__ImportsAssignment_0)*
	{ after(grammarAccess.getEModelAccess().getImportsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EModel__Group__1__Impl
	rule__EModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEModelAccess().getStartModelAssignment_1()); }
	(rule__EModel__StartModelAssignment_1)
	{ after(grammarAccess.getEModelAccess().getStartModelAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EModel__Group__2__Impl
	rule__EModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEModelAccess().getElementsAssignment_2()); }
	(rule__EModel__ElementsAssignment_2)*
	{ after(grammarAccess.getEModelAccess().getElementsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EModel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EModel__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EModel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEModelAccess().getEndModelAssignment_3()); }
	(rule__EModel__EndModelAssignment_3)
	{ after(grammarAccess.getEModelAccess().getEndModelAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportAction_0()); }
	()
	{ after(grammarAccess.getImportAccess().getImportAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getImportAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__2__Impl
	rule__Import__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportKeyword_2()); }
	'import'
	{ after(grammarAccess.getImportAccess().getImportKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__3__Impl
	rule__Import__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getImportAccess().getGroupsAssignment_3()); }
		(rule__Import__GroupsAssignment_3)
		{ after(grammarAccess.getImportAccess().getGroupsAssignment_3()); }
	)
	(
		{ before(grammarAccess.getImportAccess().getGroupsAssignment_3()); }
		(rule__Import__GroupsAssignment_3)*
		{ after(grammarAccess.getImportAccess().getGroupsAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getImportAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportGroup__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportGroup__Group__0__Impl
	rule__ImportGroup__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportGroup__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportGroupAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getImportGroupAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportGroup__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportGroup__Group__1__Impl
	rule__ImportGroup__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportGroup__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getImportGroupAccess().getImportsAssignment_1()); }
		(rule__ImportGroup__ImportsAssignment_1)
		{ after(grammarAccess.getImportGroupAccess().getImportsAssignment_1()); }
	)
	(
		{ before(grammarAccess.getImportGroupAccess().getImportsAssignment_1()); }
		(rule__ImportGroup__ImportsAssignment_1)*
		{ after(grammarAccess.getImportGroupAccess().getImportsAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportGroup__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportGroup__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportGroup__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportGroupAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getImportGroupAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StartModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartModel__Group__0__Impl
	rule__StartModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartModelAccess().getStartModelKeyword_0()); }
	'(start-model'
	{ after(grammarAccess.getStartModelAccess().getStartModelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartModel__Group__1__Impl
	rule__StartModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StartModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartModelAccess().getNameAssignment_1()); }
	(rule__StartModel__NameAssignment_1)
	{ after(grammarAccess.getStartModelAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartModel__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartModelAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getStartModelAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EndModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndModel__Group__0__Impl
	rule__EndModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EndModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndModelAccess().getEndModelAction_0()); }
	()
	{ after(grammarAccess.getEndModelAccess().getEndModelAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndModel__Group__1__Impl
	rule__EndModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EndModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndModelAccess().getEndModelKeyword_1()); }
	'(end-model)'
	{ after(grammarAccess.getEndModelAccess().getEndModelKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndModel__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EndModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndModelAccess().getNameAssignment_2()); }
	(rule__EndModel__NameAssignment_2)?
	{ after(grammarAccess.getEndModelAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Species__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Species__Group__0__Impl
	rule__Species__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Species__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpeciesAccess().getSpeciesKeyword_0()); }
	'(species'
	{ after(grammarAccess.getSpeciesAccess().getSpeciesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Species__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Species__Group__1__Impl
	rule__Species__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Species__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpeciesAccess().getNameAssignment_1()); }
	(rule__Species__NameAssignment_1)
	{ after(grammarAccess.getSpeciesAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Species__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Species__Group__2__Impl
	rule__Species__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Species__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpeciesAccess().getInitialPopulationAssignment_2()); }
	(rule__Species__InitialPopulationAssignment_2)
	{ after(grammarAccess.getSpeciesAccess().getInitialPopulationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Species__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Species__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Species__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpeciesAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getSpeciesAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getParamKeyword_0()); }
	'(param'
	{ after(grammarAccess.getParameterAccess().getParamKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getNameAssignment_1()); }
	(rule__Parameter__NameAssignment_1)
	{ after(grammarAccess.getParameterAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__2__Impl
	rule__Parameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getValueAssignment_2()); }
	(rule__Parameter__ValueAssignment_2)
	{ after(grammarAccess.getParameterAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getParameterAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getFuncKeyword_0()); }
	'(func'
	{ after(grammarAccess.getFunctionAccess().getFuncKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
	(rule__Function__NameAssignment_1)
	{ after(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getExpressionAssignment_2()); }
	(rule__Function__ExpressionAssignment_2)
	{ after(grammarAccess.getFunctionAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Observable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Observable__Group__0__Impl
	rule__Observable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Observable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObservableAccess().getObserveKeyword_0()); }
	'(observe'
	{ after(grammarAccess.getObservableAccess().getObserveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Observable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Observable__Group__1__Impl
	rule__Observable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Observable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObservableAccess().getNameAssignment_1()); }
	(rule__Observable__NameAssignment_1)
	{ after(grammarAccess.getObservableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Observable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Observable__Group__2__Impl
	rule__Observable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Observable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObservableAccess().getExpressionAssignment_2()); }
	(rule__Observable__ExpressionAssignment_2)
	{ after(grammarAccess.getObservableAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Observable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Observable__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Observable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObservableAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getObservableAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Reaction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reaction__Group__0__Impl
	rule__Reaction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionAccess().getReactionKeyword_0()); }
	'(reaction'
	{ after(grammarAccess.getReactionAccess().getReactionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reaction__Group__1__Impl
	rule__Reaction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionAccess().getNameAssignment_1()); }
	(rule__Reaction__NameAssignment_1)
	{ after(grammarAccess.getReactionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reaction__Group__2__Impl
	rule__Reaction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getReactionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reaction__Group__3__Impl
	rule__Reaction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionAccess().getInputSpeciesAssignment_3()); }
	(rule__Reaction__InputSpeciesAssignment_3)*
	{ after(grammarAccess.getReactionAccess().getInputSpeciesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reaction__Group__4__Impl
	rule__Reaction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getReactionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reaction__Group__5__Impl
	rule__Reaction__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionAccess().getLeftParenthesisKeyword_5()); }
	'('
	{ after(grammarAccess.getReactionAccess().getLeftParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reaction__Group__6__Impl
	rule__Reaction__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionAccess().getOutputSpeciesAssignment_6()); }
	(rule__Reaction__OutputSpeciesAssignment_6)*
	{ after(grammarAccess.getReactionAccess().getOutputSpeciesAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reaction__Group__7__Impl
	rule__Reaction__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getReactionAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reaction__Group__8__Impl
	rule__Reaction__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionAccess().getPropensityFunctionAssignment_8()); }
	(rule__Reaction__PropensityFunctionAssignment_8)
	{ after(grammarAccess.getReactionAccess().getPropensityFunctionAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reaction__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReactionAccess().getRightParenthesisKeyword_9()); }
	')'
	{ after(grammarAccess.getReactionAccess().getRightParenthesisKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StateEvent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateEvent__Group__0__Impl
	rule__StateEvent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateEvent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateEventAccess().getStateEventKeyword_0()); }
	'(state-event'
	{ after(grammarAccess.getStateEventAccess().getStateEventKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateEvent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateEvent__Group__1__Impl
	rule__StateEvent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateEvent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateEventAccess().getNameAssignment_1()); }
	(rule__StateEvent__NameAssignment_1)
	{ after(grammarAccess.getStateEventAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateEvent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateEvent__Group__2__Impl
	rule__StateEvent__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StateEvent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateEventAccess().getPredicateAssignment_2()); }
	(rule__StateEvent__PredicateAssignment_2)
	{ after(grammarAccess.getStateEventAccess().getPredicateAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateEvent__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateEvent__Group__3__Impl
	rule__StateEvent__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StateEvent__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateEventAccess().getVariableValuePairsAssignment_3()); }
	(rule__StateEvent__VariableValuePairsAssignment_3)
	{ after(grammarAccess.getStateEventAccess().getVariableValuePairsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateEvent__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateEvent__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateEvent__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateEventAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getStateEventAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeEvent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeEvent__Group__0__Impl
	rule__TimeEvent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeEvent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeEventAccess().getTimeEventKeyword_0()); }
	'(time-event'
	{ after(grammarAccess.getTimeEventAccess().getTimeEventKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeEvent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeEvent__Group__1__Impl
	rule__TimeEvent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeEvent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeEventAccess().getNameAssignment_1()); }
	(rule__TimeEvent__NameAssignment_1)
	{ after(grammarAccess.getTimeEventAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeEvent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeEvent__Group__2__Impl
	rule__TimeEvent__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeEvent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeEventAccess().getTimeAssignment_2()); }
	(rule__TimeEvent__TimeAssignment_2)
	{ after(grammarAccess.getTimeEventAccess().getTimeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeEvent__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeEvent__Group__3__Impl
	rule__TimeEvent__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeEvent__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeEventAccess().getIterationsAssignment_3()); }
	(rule__TimeEvent__IterationsAssignment_3)?
	{ after(grammarAccess.getTimeEventAccess().getIterationsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeEvent__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeEvent__Group__4__Impl
	rule__TimeEvent__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeEvent__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeEventAccess().getVariableValuePairsAssignment_4()); }
	(rule__TimeEvent__VariableValuePairsAssignment_4)
	{ after(grammarAccess.getTimeEventAccess().getVariableValuePairsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeEvent__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeEvent__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeEvent__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeEventAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getTimeEventAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Locale__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Locale__Group__0__Impl
	rule__Locale__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Locale__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocaleAccess().getLocaleKeyword_0()); }
	'(locale'
	{ after(grammarAccess.getLocaleAccess().getLocaleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Locale__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Locale__Group__1__Impl
	rule__Locale__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Locale__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocaleAccess().getNameAssignment_1()); }
	(rule__Locale__NameAssignment_1)
	{ after(grammarAccess.getLocaleAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Locale__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Locale__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Locale__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocaleAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getLocaleAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetLocale__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetLocale__Group__0__Impl
	rule__SetLocale__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLocale__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetLocaleAccess().getSetLocaleKeyword_0()); }
	'(set-locale'
	{ after(grammarAccess.getSetLocaleAccess().getSetLocaleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLocale__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetLocale__Group__1__Impl
	rule__SetLocale__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLocale__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetLocaleAccess().getNameAssignment_1()); }
	(rule__SetLocale__NameAssignment_1)
	{ after(grammarAccess.getSetLocaleAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLocale__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetLocale__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLocale__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetLocaleAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getSetLocaleAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Json__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Json__Group__0__Impl
	rule__Json__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Json__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonAccess().getJsonKeyword_0()); }
	'(json'
	{ after(grammarAccess.getJsonAccess().getJsonKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Json__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Json__Group__1__Impl
	rule__Json__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Json__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonAccess().getNameAssignment_1()); }
	(rule__Json__NameAssignment_1)
	{ after(grammarAccess.getJsonAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Json__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Json__Group__2__Impl
	rule__Json__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Json__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonAccess().getFileAssignment_2()); }
	(rule__Json__FileAssignment_2)
	{ after(grammarAccess.getJsonAccess().getFileAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Json__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Json__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Json__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getJsonAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableValuePairs__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableValuePairs__Group__0__Impl
	rule__VariableValuePairs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValuePairs__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableValuePairsAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getVariableValuePairsAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValuePairs__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableValuePairs__Group__1__Impl
	rule__VariableValuePairs__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValuePairs__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getVariableValuePairsAccess().getVariableValuePairsAssignment_1()); }
		(rule__VariableValuePairs__VariableValuePairsAssignment_1)
		{ after(grammarAccess.getVariableValuePairsAccess().getVariableValuePairsAssignment_1()); }
	)
	(
		{ before(grammarAccess.getVariableValuePairsAccess().getVariableValuePairsAssignment_1()); }
		(rule__VariableValuePairs__VariableValuePairsAssignment_1)*
		{ after(grammarAccess.getVariableValuePairsAccess().getVariableValuePairsAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValuePairs__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableValuePairs__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValuePairs__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableValuePairsAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getVariableValuePairsAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableValuePair__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableValuePair__Group__0__Impl
	rule__VariableValuePair__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValuePair__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableValuePairAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getVariableValuePairAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValuePair__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableValuePair__Group__1__Impl
	rule__VariableValuePair__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValuePair__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableValuePairAccess().getVariableAssignment_1()); }
	(rule__VariableValuePair__VariableAssignment_1)
	{ after(grammarAccess.getVariableValuePairAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValuePair__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableValuePair__Group__2__Impl
	rule__VariableValuePair__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValuePair__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableValuePairAccess().getValueAssignment_2()); }
	(rule__VariableValuePair__ValueAssignment_2)
	{ after(grammarAccess.getVariableValuePairAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValuePair__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableValuePair__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValuePair__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableValuePairAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getVariableValuePairAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0__0__Impl
	rule__Expression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getExpressionAction_0_0()); }
	()
	{ after(grammarAccess.getExpressionAccess().getExpressionAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getExpressionAssignment_0_1()); }
	(rule__Expression__ExpressionAssignment_0_1)
	{ after(grammarAccess.getExpressionAccess().getExpressionAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getExpressionAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__1__Impl
	rule__Expression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getExpressionAssignment_1_1()); }
	(rule__Expression__ExpressionAssignment_1_1)
	{ after(grammarAccess.getExpressionAccess().getExpressionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getExpressionAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryOperation__Group__0__Impl
	rule__BinaryOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryOperationAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getBinaryOperationAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryOperation__Group__1__Impl
	rule__BinaryOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryOperationAccess().getOperatorAssignment_1()); }
	(rule__BinaryOperation__OperatorAssignment_1)
	{ after(grammarAccess.getBinaryOperationAccess().getOperatorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryOperation__Group__2__Impl
	rule__BinaryOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryOperationAccess().getLeftAssignment_2()); }
	(rule__BinaryOperation__LeftAssignment_2)
	{ after(grammarAccess.getBinaryOperationAccess().getLeftAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryOperation__Group__3__Impl
	rule__BinaryOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryOperationAccess().getRightAssignment_3()); }
	(rule__BinaryOperation__RightAssignment_3)
	{ after(grammarAccess.getBinaryOperationAccess().getRightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryOperation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryOperationAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getBinaryOperationAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EModel__ImportsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEModelAccess().getImportsImportParserRuleCall_0_0()); }
		ruleImport
		{ after(grammarAccess.getEModelAccess().getImportsImportParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EModel__StartModelAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEModelAccess().getStartModelStartModelParserRuleCall_1_0()); }
		ruleStartModel
		{ after(grammarAccess.getEModelAccess().getStartModelStartModelParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EModel__ElementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEModelAccess().getElementsElementParserRuleCall_2_0()); }
		ruleElement
		{ after(grammarAccess.getEModelAccess().getElementsElementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EModel__EndModelAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEModelAccess().getEndModelEndModelParserRuleCall_3_0()); }
		ruleEndModel
		{ after(grammarAccess.getEModelAccess().getEndModelEndModelParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__GroupsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getGroupsImportGroupParserRuleCall_3_0()); }
		ruleImportGroup
		{ after(grammarAccess.getImportAccess().getGroupsImportGroupParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportGroup__ImportsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportGroupAccess().getImportsIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getImportGroupAccess().getImportsIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartModel__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartModelAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getStartModelAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndModel__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndModelAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getEndModelAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Species__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpeciesAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSpeciesAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Species__InitialPopulationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpeciesAccess().getInitialPopulationNUMBERTerminalRuleCall_2_0()); }
		RULE_NUMBER
		{ after(grammarAccess.getSpeciesAccess().getInitialPopulationNUMBERTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getValueNUMBERTerminalRuleCall_2_0()); }
		RULE_NUMBER
		{ after(grammarAccess.getParameterAccess().getValueNUMBERTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getFunctionAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Observable__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObservableAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getObservableAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Observable__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObservableAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getObservableAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReactionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getReactionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__InputSpeciesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReactionAccess().getInputSpeciesSpeciesCrossReference_3_0()); }
		(
			{ before(grammarAccess.getReactionAccess().getInputSpeciesSpeciesIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getReactionAccess().getInputSpeciesSpeciesIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getReactionAccess().getInputSpeciesSpeciesCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__OutputSpeciesAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReactionAccess().getOutputSpeciesSpeciesCrossReference_6_0()); }
		(
			{ before(grammarAccess.getReactionAccess().getOutputSpeciesSpeciesIDTerminalRuleCall_6_0_1()); }
			RULE_ID
			{ after(grammarAccess.getReactionAccess().getOutputSpeciesSpeciesIDTerminalRuleCall_6_0_1()); }
		)
		{ after(grammarAccess.getReactionAccess().getOutputSpeciesSpeciesCrossReference_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reaction__PropensityFunctionAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReactionAccess().getPropensityFunctionExpressionParserRuleCall_8_0()); }
		ruleExpression
		{ after(grammarAccess.getReactionAccess().getPropensityFunctionExpressionParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateEvent__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateEventAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getStateEventAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateEvent__PredicateAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateEventAccess().getPredicateExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getStateEventAccess().getPredicateExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateEvent__VariableValuePairsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateEventAccess().getVariableValuePairsVariableValuePairsParserRuleCall_3_0()); }
		ruleVariableValuePairs
		{ after(grammarAccess.getStateEventAccess().getVariableValuePairsVariableValuePairsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeEvent__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeEventAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTimeEventAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeEvent__TimeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeEventAccess().getTimeNUMBERTerminalRuleCall_2_0()); }
		RULE_NUMBER
		{ after(grammarAccess.getTimeEventAccess().getTimeNUMBERTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeEvent__IterationsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeEventAccess().getIterationsINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getTimeEventAccess().getIterationsINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeEvent__VariableValuePairsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeEventAccess().getVariableValuePairsVariableValuePairsParserRuleCall_4_0()); }
		ruleVariableValuePairs
		{ after(grammarAccess.getTimeEventAccess().getVariableValuePairsVariableValuePairsParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Locale__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocaleAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getLocaleAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetLocale__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetLocaleAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSetLocaleAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Json__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJsonAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getJsonAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Json__FileAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJsonAccess().getFileSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getJsonAccess().getFileSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValuePairs__VariableValuePairsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableValuePairsAccess().getVariableValuePairsVariableValuePairParserRuleCall_1_0()); }
		ruleVariableValuePair
		{ after(grammarAccess.getVariableValuePairsAccess().getVariableValuePairsVariableValuePairParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValuePair__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableValuePairAccess().getVariableIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableValuePairAccess().getVariableIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableValuePair__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableValuePairAccess().getValueExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getVariableValuePairAccess().getValueExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExpressionAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getExpressionBinaryOperationParserRuleCall_0_1_0()); }
		ruleBinaryOperation
		{ after(grammarAccess.getExpressionAccess().getExpressionBinaryOperationParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExpressionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getNameLiteralParserRuleCall_2_0()); }
		ruleLiteral
		{ after(grammarAccess.getExpressionAccess().getNameLiteralParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperation__OperatorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryOperationAccess().getOperatorBinaryOperatorParserRuleCall_1_0()); }
		ruleBinaryOperator
		{ after(grammarAccess.getBinaryOperationAccess().getOperatorBinaryOperatorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperation__LeftAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryOperationAccess().getLeftExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getBinaryOperationAccess().getLeftExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperation__RightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryOperationAccess().getRightExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getBinaryOperationAccess().getRightExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_NUMBER : '-'? RULE_INT ('.' RULE_INT)?;

RULE_INLINE_COMMENT : ('#'|';') ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
