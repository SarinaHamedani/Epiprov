/*
 * generated by Xtext 2.37.0
 */
package org.xtext.geodes.trustdsl.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.geodes.trustdsl.ide.contentassist.antlr.internal.InternalTrustDSLParser;
import org.xtext.geodes.trustdsl.services.TrustDSLGrammarAccess;

public class TrustDSLParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(TrustDSLGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, TrustDSLGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getElementAccess().getAlternatives(), "rule__Element__Alternatives");
			builder.put(grammarAccess.getAgentAccess().getGroup(), "rule__Agent__Group__0");
			builder.put(grammarAccess.getUncertainElementAccess().getGroup(), "rule__UncertainElement__Group__0");
			builder.put(grammarAccess.getUncertainElementAccess().getGroup_6(), "rule__UncertainElement__Group_6__0");
			builder.put(grammarAccess.getBeliefAccess().getGroup(), "rule__Belief__Group__0");
			builder.put(grammarAccess.getSBooleanAccess().getGroup(), "rule__SBoolean__Group__0");
			builder.put(grammarAccess.getUncertainElementFusionAccess().getGroup(), "rule__UncertainElementFusion__Group__0");
			builder.put(grammarAccess.getUncertainElementFusionAccess().getGroup_6(), "rule__UncertainElementFusion__Group_6__0");
			builder.put(grammarAccess.getREALAccess().getGroup(), "rule__REAL__Group__0");
			builder.put(grammarAccess.getTrustModelAccess().getElementsAssignment(), "rule__TrustModel__ElementsAssignment");
			builder.put(grammarAccess.getAgentAccess().getNameAssignment_1(), "rule__Agent__NameAssignment_1");
			builder.put(grammarAccess.getUncertainElementAccess().getNameAssignment_1(), "rule__UncertainElement__NameAssignment_1");
			builder.put(grammarAccess.getUncertainElementAccess().getBeliefsAssignment_5(), "rule__UncertainElement__BeliefsAssignment_5");
			builder.put(grammarAccess.getUncertainElementAccess().getBeliefsAssignment_6_1(), "rule__UncertainElement__BeliefsAssignment_6_1");
			builder.put(grammarAccess.getBeliefAccess().getNameAssignment_1(), "rule__Belief__NameAssignment_1");
			builder.put(grammarAccess.getBeliefAccess().getAgentAssignment_3(), "rule__Belief__AgentAssignment_3");
			builder.put(grammarAccess.getBeliefAccess().getOpinionAssignment_5(), "rule__Belief__OpinionAssignment_5");
			builder.put(grammarAccess.getSBooleanAccess().getBeliefAssignment_1(), "rule__SBoolean__BeliefAssignment_1");
			builder.put(grammarAccess.getSBooleanAccess().getDisbeliefAssignment_3(), "rule__SBoolean__DisbeliefAssignment_3");
			builder.put(grammarAccess.getSBooleanAccess().getUncertaintyAssignment_5(), "rule__SBoolean__UncertaintyAssignment_5");
			builder.put(grammarAccess.getSBooleanAccess().getBaseRateAssignment_7(), "rule__SBoolean__BaseRateAssignment_7");
			builder.put(grammarAccess.getUncertainElementFusionAccess().getNameAssignment_1(), "rule__UncertainElementFusion__NameAssignment_1");
			builder.put(grammarAccess.getUncertainElementFusionAccess().getBeliefsAssignment_5(), "rule__UncertainElementFusion__BeliefsAssignment_5");
			builder.put(grammarAccess.getUncertainElementFusionAccess().getBeliefsAssignment_6_1(), "rule__UncertainElementFusion__BeliefsAssignment_6_1");
			builder.put(grammarAccess.getUncertainElementFusionAccess().getAleatoryCumulativeBFAssignment_10(), "rule__UncertainElementFusion__AleatoryCumulativeBFAssignment_10");
			builder.put(grammarAccess.getUncertainElementFusionAccess().getAverageingBFAssignment_13(), "rule__UncertainElementFusion__AverageingBFAssignment_13");
			builder.put(grammarAccess.getUncertainElementFusionAccess().getBeliefConstraintFusionAssignment_16(), "rule__UncertainElementFusion__BeliefConstraintFusionAssignment_16");
			builder.put(grammarAccess.getUncertainElementFusionAccess().getEpistemicCumulativeBFAssignment_19(), "rule__UncertainElementFusion__EpistemicCumulativeBFAssignment_19");
			builder.put(grammarAccess.getUncertainElementFusionAccess().getWeightedBFAssignment_22(), "rule__UncertainElementFusion__WeightedBFAssignment_22");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private TrustDSLGrammarAccess grammarAccess;

	@Override
	protected InternalTrustDSLParser createParser() {
		InternalTrustDSLParser result = new InternalTrustDSLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public TrustDSLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(TrustDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
