/**
 * generated by Xtext 2.37.0
 */
package org.xtext.geodes.trustdsl.trustDSL.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.geodes.trustdsl.trustDSL.SBoolean;
import org.xtext.geodes.trustdsl.trustDSL.TrustDSLPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>SBoolean</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.geodes.trustdsl.trustDSL.impl.SBooleanImpl#getBelief <em>Belief</em>}</li>
 *   <li>{@link org.xtext.geodes.trustdsl.trustDSL.impl.SBooleanImpl#getDisbelief <em>Disbelief</em>}</li>
 *   <li>{@link org.xtext.geodes.trustdsl.trustDSL.impl.SBooleanImpl#getUncertainty <em>Uncertainty</em>}</li>
 *   <li>{@link org.xtext.geodes.trustdsl.trustDSL.impl.SBooleanImpl#getBaseRate <em>Base Rate</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SBooleanImpl extends MinimalEObjectImpl.Container implements SBoolean
{
  /**
   * The default value of the '{@link #getBelief() <em>Belief</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBelief()
   * @generated
   * @ordered
   */
  protected static final double BELIEF_EDEFAULT = 0.0;

  /**
   * The cached value of the '{@link #getBelief() <em>Belief</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBelief()
   * @generated
   * @ordered
   */
  protected double belief = BELIEF_EDEFAULT;

  /**
   * The default value of the '{@link #getDisbelief() <em>Disbelief</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDisbelief()
   * @generated
   * @ordered
   */
  protected static final double DISBELIEF_EDEFAULT = 0.0;

  /**
   * The cached value of the '{@link #getDisbelief() <em>Disbelief</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDisbelief()
   * @generated
   * @ordered
   */
  protected double disbelief = DISBELIEF_EDEFAULT;

  /**
   * The default value of the '{@link #getUncertainty() <em>Uncertainty</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUncertainty()
   * @generated
   * @ordered
   */
  protected static final double UNCERTAINTY_EDEFAULT = 0.0;

  /**
   * The cached value of the '{@link #getUncertainty() <em>Uncertainty</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUncertainty()
   * @generated
   * @ordered
   */
  protected double uncertainty = UNCERTAINTY_EDEFAULT;

  /**
   * The default value of the '{@link #getBaseRate() <em>Base Rate</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBaseRate()
   * @generated
   * @ordered
   */
  protected static final double BASE_RATE_EDEFAULT = 0.0;

  /**
   * The cached value of the '{@link #getBaseRate() <em>Base Rate</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBaseRate()
   * @generated
   * @ordered
   */
  protected double baseRate = BASE_RATE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SBooleanImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TrustDSLPackage.Literals.SBOOLEAN;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public double getBelief()
  {
    return belief;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBelief(double newBelief)
  {
    double oldBelief = belief;
    belief = newBelief;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TrustDSLPackage.SBOOLEAN__BELIEF, oldBelief, belief));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public double getDisbelief()
  {
    return disbelief;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDisbelief(double newDisbelief)
  {
    double oldDisbelief = disbelief;
    disbelief = newDisbelief;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TrustDSLPackage.SBOOLEAN__DISBELIEF, oldDisbelief, disbelief));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public double getUncertainty()
  {
    return uncertainty;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setUncertainty(double newUncertainty)
  {
    double oldUncertainty = uncertainty;
    uncertainty = newUncertainty;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TrustDSLPackage.SBOOLEAN__UNCERTAINTY, oldUncertainty, uncertainty));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public double getBaseRate()
  {
    return baseRate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBaseRate(double newBaseRate)
  {
    double oldBaseRate = baseRate;
    baseRate = newBaseRate;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TrustDSLPackage.SBOOLEAN__BASE_RATE, oldBaseRate, baseRate));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TrustDSLPackage.SBOOLEAN__BELIEF:
        return getBelief();
      case TrustDSLPackage.SBOOLEAN__DISBELIEF:
        return getDisbelief();
      case TrustDSLPackage.SBOOLEAN__UNCERTAINTY:
        return getUncertainty();
      case TrustDSLPackage.SBOOLEAN__BASE_RATE:
        return getBaseRate();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TrustDSLPackage.SBOOLEAN__BELIEF:
        setBelief((Double)newValue);
        return;
      case TrustDSLPackage.SBOOLEAN__DISBELIEF:
        setDisbelief((Double)newValue);
        return;
      case TrustDSLPackage.SBOOLEAN__UNCERTAINTY:
        setUncertainty((Double)newValue);
        return;
      case TrustDSLPackage.SBOOLEAN__BASE_RATE:
        setBaseRate((Double)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TrustDSLPackage.SBOOLEAN__BELIEF:
        setBelief(BELIEF_EDEFAULT);
        return;
      case TrustDSLPackage.SBOOLEAN__DISBELIEF:
        setDisbelief(DISBELIEF_EDEFAULT);
        return;
      case TrustDSLPackage.SBOOLEAN__UNCERTAINTY:
        setUncertainty(UNCERTAINTY_EDEFAULT);
        return;
      case TrustDSLPackage.SBOOLEAN__BASE_RATE:
        setBaseRate(BASE_RATE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TrustDSLPackage.SBOOLEAN__BELIEF:
        return belief != BELIEF_EDEFAULT;
      case TrustDSLPackage.SBOOLEAN__DISBELIEF:
        return disbelief != DISBELIEF_EDEFAULT;
      case TrustDSLPackage.SBOOLEAN__UNCERTAINTY:
        return uncertainty != UNCERTAINTY_EDEFAULT;
      case TrustDSLPackage.SBOOLEAN__BASE_RATE:
        return baseRate != BASE_RATE_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (belief: ");
    result.append(belief);
    result.append(", disbelief: ");
    result.append(disbelief);
    result.append(", uncertainty: ");
    result.append(uncertainty);
    result.append(", baseRate: ");
    result.append(baseRate);
    result.append(')');
    return result.toString();
  }

} //SBooleanImpl
