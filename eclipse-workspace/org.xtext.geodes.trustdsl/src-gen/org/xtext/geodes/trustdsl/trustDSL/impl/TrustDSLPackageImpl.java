/**
 * generated by Xtext 2.37.0
 */
package org.xtext.geodes.trustdsl.trustDSL.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.xtext.geodes.trustdsl.trustDSL.Agent;
import org.xtext.geodes.trustdsl.trustDSL.Belief;
import org.xtext.geodes.trustdsl.trustDSL.Element;
import org.xtext.geodes.trustdsl.trustDSL.SBoolean;
import org.xtext.geodes.trustdsl.trustDSL.TrustDSLFactory;
import org.xtext.geodes.trustdsl.trustDSL.TrustDSLPackage;
import org.xtext.geodes.trustdsl.trustDSL.TrustModel;
import org.xtext.geodes.trustdsl.trustDSL.UncertainElement;
import org.xtext.geodes.trustdsl.trustDSL.UncertainElementFusion;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class TrustDSLPackageImpl extends EPackageImpl implements TrustDSLPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass trustModelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass elementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass agentEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass uncertainElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass beliefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass sBooleanEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass uncertainElementFusionEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.xtext.geodes.trustdsl.trustDSL.TrustDSLPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private TrustDSLPackageImpl()
  {
    super(eNS_URI, TrustDSLFactory.eINSTANCE);
  }
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link TrustDSLPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static TrustDSLPackage init()
  {
    if (isInited) return (TrustDSLPackage)EPackage.Registry.INSTANCE.getEPackage(TrustDSLPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredTrustDSLPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    TrustDSLPackageImpl theTrustDSLPackage = registeredTrustDSLPackage instanceof TrustDSLPackageImpl ? (TrustDSLPackageImpl)registeredTrustDSLPackage : new TrustDSLPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theTrustDSLPackage.createPackageContents();

    // Initialize created meta-data
    theTrustDSLPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theTrustDSLPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(TrustDSLPackage.eNS_URI, theTrustDSLPackage);
    return theTrustDSLPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTrustModel()
  {
    return trustModelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTrustModel_Elements()
  {
    return (EReference)trustModelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getElement()
  {
    return elementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getElement_Name()
  {
    return (EAttribute)elementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAgent()
  {
    return agentEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getUncertainElement()
  {
    return uncertainElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getUncertainElement_Beliefs()
  {
    return (EReference)uncertainElementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBelief()
  {
    return beliefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBelief_Agent()
  {
    return (EReference)beliefEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBelief_Opinion()
  {
    return (EReference)beliefEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSBoolean()
  {
    return sBooleanEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSBoolean_Belief()
  {
    return (EAttribute)sBooleanEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSBoolean_Disbelief()
  {
    return (EAttribute)sBooleanEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSBoolean_Uncertainty()
  {
    return (EAttribute)sBooleanEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSBoolean_BaseRate()
  {
    return (EAttribute)sBooleanEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getUncertainElementFusion()
  {
    return uncertainElementFusionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getUncertainElementFusion_Beliefs()
  {
    return (EReference)uncertainElementFusionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getUncertainElementFusion_AleatoryCumulativeBF()
  {
    return (EReference)uncertainElementFusionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getUncertainElementFusion_AverageingBF()
  {
    return (EReference)uncertainElementFusionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getUncertainElementFusion_BeliefConstraintFusion()
  {
    return (EReference)uncertainElementFusionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getUncertainElementFusion_EpistemicCumulativeBF()
  {
    return (EReference)uncertainElementFusionEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getUncertainElementFusion_WeightedBF()
  {
    return (EReference)uncertainElementFusionEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TrustDSLFactory getTrustDSLFactory()
  {
    return (TrustDSLFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    trustModelEClass = createEClass(TRUST_MODEL);
    createEReference(trustModelEClass, TRUST_MODEL__ELEMENTS);

    elementEClass = createEClass(ELEMENT);
    createEAttribute(elementEClass, ELEMENT__NAME);

    agentEClass = createEClass(AGENT);

    uncertainElementEClass = createEClass(UNCERTAIN_ELEMENT);
    createEReference(uncertainElementEClass, UNCERTAIN_ELEMENT__BELIEFS);

    beliefEClass = createEClass(BELIEF);
    createEReference(beliefEClass, BELIEF__AGENT);
    createEReference(beliefEClass, BELIEF__OPINION);

    sBooleanEClass = createEClass(SBOOLEAN);
    createEAttribute(sBooleanEClass, SBOOLEAN__BELIEF);
    createEAttribute(sBooleanEClass, SBOOLEAN__DISBELIEF);
    createEAttribute(sBooleanEClass, SBOOLEAN__UNCERTAINTY);
    createEAttribute(sBooleanEClass, SBOOLEAN__BASE_RATE);

    uncertainElementFusionEClass = createEClass(UNCERTAIN_ELEMENT_FUSION);
    createEReference(uncertainElementFusionEClass, UNCERTAIN_ELEMENT_FUSION__BELIEFS);
    createEReference(uncertainElementFusionEClass, UNCERTAIN_ELEMENT_FUSION__ALEATORY_CUMULATIVE_BF);
    createEReference(uncertainElementFusionEClass, UNCERTAIN_ELEMENT_FUSION__AVERAGEING_BF);
    createEReference(uncertainElementFusionEClass, UNCERTAIN_ELEMENT_FUSION__BELIEF_CONSTRAINT_FUSION);
    createEReference(uncertainElementFusionEClass, UNCERTAIN_ELEMENT_FUSION__EPISTEMIC_CUMULATIVE_BF);
    createEReference(uncertainElementFusionEClass, UNCERTAIN_ELEMENT_FUSION__WEIGHTED_BF);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    agentEClass.getESuperTypes().add(this.getElement());
    uncertainElementEClass.getESuperTypes().add(this.getElement());
    beliefEClass.getESuperTypes().add(this.getElement());
    uncertainElementFusionEClass.getESuperTypes().add(this.getElement());

    // Initialize classes and features; add operations and parameters
    initEClass(trustModelEClass, TrustModel.class, "TrustModel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTrustModel_Elements(), this.getElement(), null, "elements", null, 0, -1, TrustModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(elementEClass, Element.class, "Element", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getElement_Name(), ecorePackage.getEString(), "name", null, 0, 1, Element.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(agentEClass, Agent.class, "Agent", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(uncertainElementEClass, UncertainElement.class, "UncertainElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getUncertainElement_Beliefs(), this.getBelief(), null, "beliefs", null, 0, -1, UncertainElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(beliefEClass, Belief.class, "Belief", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBelief_Agent(), this.getAgent(), null, "agent", null, 0, 1, Belief.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBelief_Opinion(), this.getSBoolean(), null, "opinion", null, 0, 1, Belief.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(sBooleanEClass, SBoolean.class, "SBoolean", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSBoolean_Belief(), ecorePackage.getEDouble(), "belief", null, 0, 1, SBoolean.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSBoolean_Disbelief(), ecorePackage.getEDouble(), "disbelief", null, 0, 1, SBoolean.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSBoolean_Uncertainty(), ecorePackage.getEDouble(), "uncertainty", null, 0, 1, SBoolean.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSBoolean_BaseRate(), ecorePackage.getEDouble(), "baseRate", null, 0, 1, SBoolean.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(uncertainElementFusionEClass, UncertainElementFusion.class, "UncertainElementFusion", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getUncertainElementFusion_Beliefs(), this.getBelief(), null, "beliefs", null, 0, -1, UncertainElementFusion.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getUncertainElementFusion_AleatoryCumulativeBF(), this.getSBoolean(), null, "aleatoryCumulativeBF", null, 0, 1, UncertainElementFusion.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getUncertainElementFusion_AverageingBF(), this.getSBoolean(), null, "averageingBF", null, 0, 1, UncertainElementFusion.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getUncertainElementFusion_BeliefConstraintFusion(), this.getSBoolean(), null, "beliefConstraintFusion", null, 0, 1, UncertainElementFusion.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getUncertainElementFusion_EpistemicCumulativeBF(), this.getSBoolean(), null, "epistemicCumulativeBF", null, 0, 1, UncertainElementFusion.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getUncertainElementFusion_WeightedBF(), this.getSBoolean(), null, "weightedBF", null, 0, 1, UncertainElementFusion.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //TrustDSLPackageImpl
