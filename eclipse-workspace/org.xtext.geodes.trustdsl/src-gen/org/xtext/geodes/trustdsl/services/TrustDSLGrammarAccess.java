/*
 * generated by Xtext 2.37.0
 */
package org.xtext.geodes.trustdsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class TrustDSLGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class TrustModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.geodes.trustdsl.TrustDSL.TrustModel");
		private final Assignment cElementsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cElementsElementParserRuleCall_0 = (RuleCall)cElementsAssignment.eContents().get(0);
		
		//TrustModel:
		//    (elements+=Element)*;
		@Override public ParserRule getRule() { return rule; }
		
		//(elements+=Element)*
		public Assignment getElementsAssignment() { return cElementsAssignment; }
		
		//Element
		public RuleCall getElementsElementParserRuleCall_0() { return cElementsElementParserRuleCall_0; }
	}
	public class ElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.geodes.trustdsl.TrustDSL.Element");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAgentParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUncertainElementParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cUncertainElementFusionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cBeliefParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Element:
		//    Agent | UncertainElement | UncertainElementFusion | Belief;
		@Override public ParserRule getRule() { return rule; }
		
		//Agent | UncertainElement | UncertainElementFusion | Belief
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Agent
		public RuleCall getAgentParserRuleCall_0() { return cAgentParserRuleCall_0; }
		
		//UncertainElement
		public RuleCall getUncertainElementParserRuleCall_1() { return cUncertainElementParserRuleCall_1; }
		
		//UncertainElementFusion
		public RuleCall getUncertainElementFusionParserRuleCall_2() { return cUncertainElementFusionParserRuleCall_2; }
		
		//Belief
		public RuleCall getBeliefParserRuleCall_3() { return cBeliefParserRuleCall_3; }
	}
	public class AgentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.geodes.trustdsl.TrustDSL.Agent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAgentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Agent:
		//    'Agent' name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//'Agent' name=ID
		public Group getGroup() { return cGroup; }
		
		//'Agent'
		public Keyword getAgentKeyword_0() { return cAgentKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}
	public class UncertainElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.geodes.trustdsl.TrustDSL.UncertainElement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUncertainElementKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cBeliefsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cBeliefsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cBeliefsBeliefParserRuleCall_5_0 = (RuleCall)cBeliefsAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cBeliefsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cBeliefsBeliefParserRuleCall_6_1_0 = (RuleCall)cBeliefsAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//UncertainElement:
		//    'UncertainElement' name=ID
		//    '{'
		//        'beliefs' '{' beliefs+=Belief (',' beliefs+=Belief)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'UncertainElement' name=ID
		//'{'
		//    'beliefs' '{' beliefs+=Belief (',' beliefs+=Belief)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'UncertainElement'
		public Keyword getUncertainElementKeyword_0() { return cUncertainElementKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'beliefs'
		public Keyword getBeliefsKeyword_3() { return cBeliefsKeyword_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//beliefs+=Belief
		public Assignment getBeliefsAssignment_5() { return cBeliefsAssignment_5; }
		
		//Belief
		public RuleCall getBeliefsBeliefParserRuleCall_5_0() { return cBeliefsBeliefParserRuleCall_5_0; }
		
		//(',' beliefs+=Belief)*
		public Group getGroup_6() { return cGroup_6; }
		
		//','
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//beliefs+=Belief
		public Assignment getBeliefsAssignment_6_1() { return cBeliefsAssignment_6_1; }
		
		//Belief
		public RuleCall getBeliefsBeliefParserRuleCall_6_1_0() { return cBeliefsBeliefParserRuleCall_6_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class BeliefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.geodes.trustdsl.TrustDSL.Belief");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBeliefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAgentAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cAgentAgentCrossReference_3_0 = (CrossReference)cAgentAssignment_3.eContents().get(0);
		private final RuleCall cAgentAgentIDTerminalRuleCall_3_0_1 = (RuleCall)cAgentAgentCrossReference_3_0.eContents().get(1);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cOpinionAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cOpinionSBooleanParserRuleCall_5_0 = (RuleCall)cOpinionAssignment_5.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Belief:
		//    'Belief' name=ID
		//    '(' agent=[Agent] ',' opinion=SBoolean ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'Belief' name=ID
		//'(' agent=[Agent] ',' opinion=SBoolean ')'
		public Group getGroup() { return cGroup; }
		
		//'Belief'
		public Keyword getBeliefKeyword_0() { return cBeliefKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//agent=[Agent]
		public Assignment getAgentAssignment_3() { return cAgentAssignment_3; }
		
		//[Agent]
		public CrossReference getAgentAgentCrossReference_3_0() { return cAgentAgentCrossReference_3_0; }
		
		//ID
		public RuleCall getAgentAgentIDTerminalRuleCall_3_0_1() { return cAgentAgentIDTerminalRuleCall_3_0_1; }
		
		//','
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }
		
		//opinion=SBoolean
		public Assignment getOpinionAssignment_5() { return cOpinionAssignment_5; }
		
		//SBoolean
		public RuleCall getOpinionSBooleanParserRuleCall_5_0() { return cOpinionSBooleanParserRuleCall_5_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}
	public class SBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.geodes.trustdsl.TrustDSL.SBoolean");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cBeliefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cBeliefREALParserRuleCall_1_0 = (RuleCall)cBeliefAssignment_1.eContents().get(0);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDisbeliefAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDisbeliefREALParserRuleCall_3_0 = (RuleCall)cDisbeliefAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cUncertaintyAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cUncertaintyREALParserRuleCall_5_0 = (RuleCall)cUncertaintyAssignment_5.eContents().get(0);
		private final Keyword cCommaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cBaseRateAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cBaseRateREALParserRuleCall_7_0 = (RuleCall)cBaseRateAssignment_7.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//SBoolean:
		//    '(' belief=REAL ',' disbelief=REAL ',' uncertainty=REAL ',' baseRate=REAL ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'(' belief=REAL ',' disbelief=REAL ',' uncertainty=REAL ',' baseRate=REAL ')'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//belief=REAL
		public Assignment getBeliefAssignment_1() { return cBeliefAssignment_1; }
		
		//REAL
		public RuleCall getBeliefREALParserRuleCall_1_0() { return cBeliefREALParserRuleCall_1_0; }
		
		//','
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }
		
		//disbelief=REAL
		public Assignment getDisbeliefAssignment_3() { return cDisbeliefAssignment_3; }
		
		//REAL
		public RuleCall getDisbeliefREALParserRuleCall_3_0() { return cDisbeliefREALParserRuleCall_3_0; }
		
		//','
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }
		
		//uncertainty=REAL
		public Assignment getUncertaintyAssignment_5() { return cUncertaintyAssignment_5; }
		
		//REAL
		public RuleCall getUncertaintyREALParserRuleCall_5_0() { return cUncertaintyREALParserRuleCall_5_0; }
		
		//','
		public Keyword getCommaKeyword_6() { return cCommaKeyword_6; }
		
		//baseRate=REAL
		public Assignment getBaseRateAssignment_7() { return cBaseRateAssignment_7; }
		
		//REAL
		public RuleCall getBaseRateREALParserRuleCall_7_0() { return cBaseRateREALParserRuleCall_7_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_8() { return cRightParenthesisKeyword_8; }
	}
	public class UncertainElementFusionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.geodes.trustdsl.TrustDSL.UncertainElementFusion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUncertainElementFusionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cBeliefsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cBeliefsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cBeliefsBeliefParserRuleCall_5_0 = (RuleCall)cBeliefsAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cBeliefsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cBeliefsBeliefParserRuleCall_6_1_0 = (RuleCall)cBeliefsAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cAleatoryCumulativeBFKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cEqualsSignKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cAleatoryCumulativeBFAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cAleatoryCumulativeBFSBooleanParserRuleCall_10_0 = (RuleCall)cAleatoryCumulativeBFAssignment_10.eContents().get(0);
		private final Keyword cAverageingBFKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cEqualsSignKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cAverageingBFAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cAverageingBFSBooleanParserRuleCall_13_0 = (RuleCall)cAverageingBFAssignment_13.eContents().get(0);
		private final Keyword cBeliefConstraintFusionKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cEqualsSignKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cBeliefConstraintFusionAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cBeliefConstraintFusionSBooleanParserRuleCall_16_0 = (RuleCall)cBeliefConstraintFusionAssignment_16.eContents().get(0);
		private final Keyword cEpistemicCumulativeBFKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Keyword cEqualsSignKeyword_18 = (Keyword)cGroup.eContents().get(18);
		private final Assignment cEpistemicCumulativeBFAssignment_19 = (Assignment)cGroup.eContents().get(19);
		private final RuleCall cEpistemicCumulativeBFSBooleanParserRuleCall_19_0 = (RuleCall)cEpistemicCumulativeBFAssignment_19.eContents().get(0);
		private final Keyword cWeightedBFKeyword_20 = (Keyword)cGroup.eContents().get(20);
		private final Keyword cEqualsSignKeyword_21 = (Keyword)cGroup.eContents().get(21);
		private final Assignment cWeightedBFAssignment_22 = (Assignment)cGroup.eContents().get(22);
		private final RuleCall cWeightedBFSBooleanParserRuleCall_22_0 = (RuleCall)cWeightedBFAssignment_22.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_23 = (Keyword)cGroup.eContents().get(23);
		
		//UncertainElementFusion:
		//    'UncertainElementFusion' name=ID
		//    '{'
		//        'beliefs' '{' beliefs+=Belief (',' beliefs+=Belief)* '}'
		//        'aleatoryCumulativeBF' '=' aleatoryCumulativeBF=SBoolean
		//        'averageingBF' '=' averageingBF=SBoolean
		//        'beliefConstraintFusion' '=' beliefConstraintFusion=SBoolean
		////        'consensusCompromiseBF' consensusCompromiseBF=SBoolean
		//        'epistemicCumulativeBF' '=' epistemicCumulativeBF=SBoolean
		//        'weightedBF' '=' weightedBF=SBoolean
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//    'UncertainElementFusion' name=ID
		//    '{'
		//        'beliefs' '{' beliefs+=Belief (',' beliefs+=Belief)* '}'
		//        'aleatoryCumulativeBF' '=' aleatoryCumulativeBF=SBoolean
		//        'averageingBF' '=' averageingBF=SBoolean
		//        'beliefConstraintFusion' '=' beliefConstraintFusion=SBoolean
		////        'consensusCompromiseBF' consensusCompromiseBF=SBoolean
		//        'epistemicCumulativeBF' '=' epistemicCumulativeBF=SBoolean
		//        'weightedBF' '=' weightedBF=SBoolean
		//    '}'
		public Group getGroup() { return cGroup; }
		
		//'UncertainElementFusion'
		public Keyword getUncertainElementFusionKeyword_0() { return cUncertainElementFusionKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'beliefs'
		public Keyword getBeliefsKeyword_3() { return cBeliefsKeyword_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//beliefs+=Belief
		public Assignment getBeliefsAssignment_5() { return cBeliefsAssignment_5; }
		
		//Belief
		public RuleCall getBeliefsBeliefParserRuleCall_5_0() { return cBeliefsBeliefParserRuleCall_5_0; }
		
		//(',' beliefs+=Belief)*
		public Group getGroup_6() { return cGroup_6; }
		
		//','
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//beliefs+=Belief
		public Assignment getBeliefsAssignment_6_1() { return cBeliefsAssignment_6_1; }
		
		//Belief
		public RuleCall getBeliefsBeliefParserRuleCall_6_1_0() { return cBeliefsBeliefParserRuleCall_6_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
		
		//'aleatoryCumulativeBF'
		public Keyword getAleatoryCumulativeBFKeyword_8() { return cAleatoryCumulativeBFKeyword_8; }
		
		//'='
		public Keyword getEqualsSignKeyword_9() { return cEqualsSignKeyword_9; }
		
		//aleatoryCumulativeBF=SBoolean
		public Assignment getAleatoryCumulativeBFAssignment_10() { return cAleatoryCumulativeBFAssignment_10; }
		
		//SBoolean
		public RuleCall getAleatoryCumulativeBFSBooleanParserRuleCall_10_0() { return cAleatoryCumulativeBFSBooleanParserRuleCall_10_0; }
		
		//'averageingBF'
		public Keyword getAverageingBFKeyword_11() { return cAverageingBFKeyword_11; }
		
		//'='
		public Keyword getEqualsSignKeyword_12() { return cEqualsSignKeyword_12; }
		
		//averageingBF=SBoolean
		public Assignment getAverageingBFAssignment_13() { return cAverageingBFAssignment_13; }
		
		//SBoolean
		public RuleCall getAverageingBFSBooleanParserRuleCall_13_0() { return cAverageingBFSBooleanParserRuleCall_13_0; }
		
		//'beliefConstraintFusion'
		public Keyword getBeliefConstraintFusionKeyword_14() { return cBeliefConstraintFusionKeyword_14; }
		
		//'='
		public Keyword getEqualsSignKeyword_15() { return cEqualsSignKeyword_15; }
		
		//beliefConstraintFusion=SBoolean
		public Assignment getBeliefConstraintFusionAssignment_16() { return cBeliefConstraintFusionAssignment_16; }
		
		//SBoolean
		public RuleCall getBeliefConstraintFusionSBooleanParserRuleCall_16_0() { return cBeliefConstraintFusionSBooleanParserRuleCall_16_0; }
		
		////        'consensusCompromiseBF' consensusCompromiseBF=SBoolean
		//        'epistemicCumulativeBF'
		public Keyword getEpistemicCumulativeBFKeyword_17() { return cEpistemicCumulativeBFKeyword_17; }
		
		//'='
		public Keyword getEqualsSignKeyword_18() { return cEqualsSignKeyword_18; }
		
		//epistemicCumulativeBF=SBoolean
		public Assignment getEpistemicCumulativeBFAssignment_19() { return cEpistemicCumulativeBFAssignment_19; }
		
		//SBoolean
		public RuleCall getEpistemicCumulativeBFSBooleanParserRuleCall_19_0() { return cEpistemicCumulativeBFSBooleanParserRuleCall_19_0; }
		
		//'weightedBF'
		public Keyword getWeightedBFKeyword_20() { return cWeightedBFKeyword_20; }
		
		//'='
		public Keyword getEqualsSignKeyword_21() { return cEqualsSignKeyword_21; }
		
		//weightedBF=SBoolean
		public Assignment getWeightedBFAssignment_22() { return cWeightedBFAssignment_22; }
		
		//SBoolean
		public RuleCall getWeightedBFSBooleanParserRuleCall_22_0() { return cWeightedBFSBooleanParserRuleCall_22_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_23() { return cRightCurlyBracketKeyword_23; }
	}
	public class REALElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.geodes.trustdsl.TrustDSL.REAL");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//REAL returns ecore::EDouble:
		//    INT '.' INT;
		@Override public ParserRule getRule() { return rule; }
		
		//INT '.' INT
		public Group getGroup() { return cGroup; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }
		
		//'.'
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
	}
	
	
	private final TrustModelElements pTrustModel;
	private final ElementElements pElement;
	private final AgentElements pAgent;
	private final UncertainElementElements pUncertainElement;
	private final BeliefElements pBelief;
	private final SBooleanElements pSBoolean;
	private final UncertainElementFusionElements pUncertainElementFusion;
	private final REALElements pREAL;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public TrustDSLGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pTrustModel = new TrustModelElements();
		this.pElement = new ElementElements();
		this.pAgent = new AgentElements();
		this.pUncertainElement = new UncertainElementElements();
		this.pBelief = new BeliefElements();
		this.pSBoolean = new SBooleanElements();
		this.pUncertainElementFusion = new UncertainElementFusionElements();
		this.pREAL = new REALElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.geodes.trustdsl.TrustDSL".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//TrustModel:
	//    (elements+=Element)*;
	public TrustModelElements getTrustModelAccess() {
		return pTrustModel;
	}
	
	public ParserRule getTrustModelRule() {
		return getTrustModelAccess().getRule();
	}
	
	//Element:
	//    Agent | UncertainElement | UncertainElementFusion | Belief;
	public ElementElements getElementAccess() {
		return pElement;
	}
	
	public ParserRule getElementRule() {
		return getElementAccess().getRule();
	}
	
	//Agent:
	//    'Agent' name=ID;
	public AgentElements getAgentAccess() {
		return pAgent;
	}
	
	public ParserRule getAgentRule() {
		return getAgentAccess().getRule();
	}
	
	//UncertainElement:
	//    'UncertainElement' name=ID
	//    '{'
	//        'beliefs' '{' beliefs+=Belief (',' beliefs+=Belief)* '}'
	//    '}';
	public UncertainElementElements getUncertainElementAccess() {
		return pUncertainElement;
	}
	
	public ParserRule getUncertainElementRule() {
		return getUncertainElementAccess().getRule();
	}
	
	//Belief:
	//    'Belief' name=ID
	//    '(' agent=[Agent] ',' opinion=SBoolean ')';
	public BeliefElements getBeliefAccess() {
		return pBelief;
	}
	
	public ParserRule getBeliefRule() {
		return getBeliefAccess().getRule();
	}
	
	//SBoolean:
	//    '(' belief=REAL ',' disbelief=REAL ',' uncertainty=REAL ',' baseRate=REAL ')';
	public SBooleanElements getSBooleanAccess() {
		return pSBoolean;
	}
	
	public ParserRule getSBooleanRule() {
		return getSBooleanAccess().getRule();
	}
	
	//UncertainElementFusion:
	//    'UncertainElementFusion' name=ID
	//    '{'
	//        'beliefs' '{' beliefs+=Belief (',' beliefs+=Belief)* '}'
	//        'aleatoryCumulativeBF' '=' aleatoryCumulativeBF=SBoolean
	//        'averageingBF' '=' averageingBF=SBoolean
	//        'beliefConstraintFusion' '=' beliefConstraintFusion=SBoolean
	////        'consensusCompromiseBF' consensusCompromiseBF=SBoolean
	//        'epistemicCumulativeBF' '=' epistemicCumulativeBF=SBoolean
	//        'weightedBF' '=' weightedBF=SBoolean
	//    '}';
	public UncertainElementFusionElements getUncertainElementFusionAccess() {
		return pUncertainElementFusion;
	}
	
	public ParserRule getUncertainElementFusionRule() {
		return getUncertainElementFusionAccess().getRule();
	}
	
	//REAL returns ecore::EDouble:
	//    INT '.' INT;
	public REALElements getREALAccess() {
		return pREAL;
	}
	
	public ParserRule getREALRule() {
		return getREALAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
