/*
 * generated by Xtext 2.37.0
 */
grammar InternalTrustDSL;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.geodes.trustdsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.geodes.trustdsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.geodes.trustdsl.services.TrustDSLGrammarAccess;

}

@parser::members {

 	private TrustDSLGrammarAccess grammarAccess;

    public InternalTrustDSLParser(TokenStream input, TrustDSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "TrustModel";
   	}

   	@Override
   	protected TrustDSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleTrustModel
entryRuleTrustModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTrustModelRule()); }
	iv_ruleTrustModel=ruleTrustModel
	{ $current=$iv_ruleTrustModel.current; }
	EOF;

// Rule TrustModel
ruleTrustModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getTrustModelAccess().getElementsElementParserRuleCall_0());
			}
			lv_elements_0_0=ruleElement
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getTrustModelRule());
				}
				add(
					$current,
					"elements",
					lv_elements_0_0,
					"org.xtext.geodes.trustdsl.TrustDSL.Element");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	iv_ruleElement=ruleElement
	{ $current=$iv_ruleElement.current; }
	EOF;

// Rule Element
ruleElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getElementAccess().getAgentParserRuleCall_0());
		}
		this_Agent_0=ruleAgent
		{
			$current = $this_Agent_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getUncertainElementParserRuleCall_1());
		}
		this_UncertainElement_1=ruleUncertainElement
		{
			$current = $this_UncertainElement_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getUncertainElementFusionParserRuleCall_2());
		}
		this_UncertainElementFusion_2=ruleUncertainElementFusion
		{
			$current = $this_UncertainElementFusion_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getBeliefParserRuleCall_3());
		}
		this_Belief_3=ruleBelief
		{
			$current = $this_Belief_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAgent
entryRuleAgent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAgentRule()); }
	iv_ruleAgent=ruleAgent
	{ $current=$iv_ruleAgent.current; }
	EOF;

// Rule Agent
ruleAgent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Agent'
		{
			newLeafNode(otherlv_0, grammarAccess.getAgentAccess().getAgentKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAgentAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAgentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleUncertainElement
entryRuleUncertainElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUncertainElementRule()); }
	iv_ruleUncertainElement=ruleUncertainElement
	{ $current=$iv_ruleUncertainElement.current; }
	EOF;

// Rule UncertainElement
ruleUncertainElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='UncertainElement'
		{
			newLeafNode(otherlv_0, grammarAccess.getUncertainElementAccess().getUncertainElementKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getUncertainElementAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUncertainElementRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getUncertainElementAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='beliefs'
		{
			newLeafNode(otherlv_3, grammarAccess.getUncertainElementAccess().getBeliefsKeyword_3());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getUncertainElementAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUncertainElementAccess().getBeliefsBeliefParserRuleCall_5_0());
				}
				lv_beliefs_5_0=ruleBelief
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUncertainElementRule());
					}
					add(
						$current,
						"beliefs",
						lv_beliefs_5_0,
						"org.xtext.geodes.trustdsl.TrustDSL.Belief");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getUncertainElementAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUncertainElementAccess().getBeliefsBeliefParserRuleCall_6_1_0());
					}
					lv_beliefs_7_0=ruleBelief
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUncertainElementRule());
						}
						add(
							$current,
							"beliefs",
							lv_beliefs_7_0,
							"org.xtext.geodes.trustdsl.TrustDSL.Belief");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getUncertainElementAccess().getRightCurlyBracketKeyword_7());
		}
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getUncertainElementAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleBelief
entryRuleBelief returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBeliefRule()); }
	iv_ruleBelief=ruleBelief
	{ $current=$iv_ruleBelief.current; }
	EOF;

// Rule Belief
ruleBelief returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Belief'
		{
			newLeafNode(otherlv_0, grammarAccess.getBeliefAccess().getBeliefKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getBeliefAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBeliefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getBeliefAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBeliefRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getBeliefAccess().getAgentAgentCrossReference_3_0());
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getBeliefAccess().getCommaKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBeliefAccess().getOpinionSBooleanParserRuleCall_5_0());
				}
				lv_opinion_5_0=ruleSBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBeliefRule());
					}
					set(
						$current,
						"opinion",
						lv_opinion_5_0,
						"org.xtext.geodes.trustdsl.TrustDSL.SBoolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getBeliefAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleSBoolean
entryRuleSBoolean returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSBooleanRule()); }
	iv_ruleSBoolean=ruleSBoolean
	{ $current=$iv_ruleSBoolean.current; }
	EOF;

// Rule SBoolean
ruleSBoolean returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getSBooleanAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSBooleanAccess().getBeliefREALParserRuleCall_1_0());
				}
				lv_belief_1_0=ruleREAL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSBooleanRule());
					}
					set(
						$current,
						"belief",
						lv_belief_1_0,
						"org.xtext.geodes.trustdsl.TrustDSL.REAL");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getSBooleanAccess().getCommaKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSBooleanAccess().getDisbeliefREALParserRuleCall_3_0());
				}
				lv_disbelief_3_0=ruleREAL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSBooleanRule());
					}
					set(
						$current,
						"disbelief",
						lv_disbelief_3_0,
						"org.xtext.geodes.trustdsl.TrustDSL.REAL");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getSBooleanAccess().getCommaKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSBooleanAccess().getUncertaintyREALParserRuleCall_5_0());
				}
				lv_uncertainty_5_0=ruleREAL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSBooleanRule());
					}
					set(
						$current,
						"uncertainty",
						lv_uncertainty_5_0,
						"org.xtext.geodes.trustdsl.TrustDSL.REAL");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=','
		{
			newLeafNode(otherlv_6, grammarAccess.getSBooleanAccess().getCommaKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSBooleanAccess().getBaseRateREALParserRuleCall_7_0());
				}
				lv_baseRate_7_0=ruleREAL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSBooleanRule());
					}
					set(
						$current,
						"baseRate",
						lv_baseRate_7_0,
						"org.xtext.geodes.trustdsl.TrustDSL.REAL");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getSBooleanAccess().getRightParenthesisKeyword_8());
		}
	)
;

// Entry rule entryRuleUncertainElementFusion
entryRuleUncertainElementFusion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUncertainElementFusionRule()); }
	iv_ruleUncertainElementFusion=ruleUncertainElementFusion
	{ $current=$iv_ruleUncertainElementFusion.current; }
	EOF;

// Rule UncertainElementFusion
ruleUncertainElementFusion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='UncertainElementFusion'
		{
			newLeafNode(otherlv_0, grammarAccess.getUncertainElementFusionAccess().getUncertainElementFusionKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getUncertainElementFusionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUncertainElementFusionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getUncertainElementFusionAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='beliefs'
		{
			newLeafNode(otherlv_3, grammarAccess.getUncertainElementFusionAccess().getBeliefsKeyword_3());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getUncertainElementFusionAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUncertainElementFusionAccess().getBeliefsBeliefParserRuleCall_5_0());
				}
				lv_beliefs_5_0=ruleBelief
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUncertainElementFusionRule());
					}
					add(
						$current,
						"beliefs",
						lv_beliefs_5_0,
						"org.xtext.geodes.trustdsl.TrustDSL.Belief");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getUncertainElementFusionAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUncertainElementFusionAccess().getBeliefsBeliefParserRuleCall_6_1_0());
					}
					lv_beliefs_7_0=ruleBelief
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUncertainElementFusionRule());
						}
						add(
							$current,
							"beliefs",
							lv_beliefs_7_0,
							"org.xtext.geodes.trustdsl.TrustDSL.Belief");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getUncertainElementFusionAccess().getRightCurlyBracketKeyword_7());
		}
		otherlv_9='aleatoryCumulativeBF'
		{
			newLeafNode(otherlv_9, grammarAccess.getUncertainElementFusionAccess().getAleatoryCumulativeBFKeyword_8());
		}
		otherlv_10='='
		{
			newLeafNode(otherlv_10, grammarAccess.getUncertainElementFusionAccess().getEqualsSignKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUncertainElementFusionAccess().getAleatoryCumulativeBFSBooleanParserRuleCall_10_0());
				}
				lv_aleatoryCumulativeBF_11_0=ruleSBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUncertainElementFusionRule());
					}
					set(
						$current,
						"aleatoryCumulativeBF",
						lv_aleatoryCumulativeBF_11_0,
						"org.xtext.geodes.trustdsl.TrustDSL.SBoolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_12='averageingBF'
		{
			newLeafNode(otherlv_12, grammarAccess.getUncertainElementFusionAccess().getAverageingBFKeyword_11());
		}
		otherlv_13='='
		{
			newLeafNode(otherlv_13, grammarAccess.getUncertainElementFusionAccess().getEqualsSignKeyword_12());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUncertainElementFusionAccess().getAverageingBFSBooleanParserRuleCall_13_0());
				}
				lv_averageingBF_14_0=ruleSBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUncertainElementFusionRule());
					}
					set(
						$current,
						"averageingBF",
						lv_averageingBF_14_0,
						"org.xtext.geodes.trustdsl.TrustDSL.SBoolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_15='beliefConstraintFusion'
		{
			newLeafNode(otherlv_15, grammarAccess.getUncertainElementFusionAccess().getBeliefConstraintFusionKeyword_14());
		}
		otherlv_16='='
		{
			newLeafNode(otherlv_16, grammarAccess.getUncertainElementFusionAccess().getEqualsSignKeyword_15());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUncertainElementFusionAccess().getBeliefConstraintFusionSBooleanParserRuleCall_16_0());
				}
				lv_beliefConstraintFusion_17_0=ruleSBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUncertainElementFusionRule());
					}
					set(
						$current,
						"beliefConstraintFusion",
						lv_beliefConstraintFusion_17_0,
						"org.xtext.geodes.trustdsl.TrustDSL.SBoolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_18='epistemicCumulativeBF'
		{
			newLeafNode(otherlv_18, grammarAccess.getUncertainElementFusionAccess().getEpistemicCumulativeBFKeyword_17());
		}
		otherlv_19='='
		{
			newLeafNode(otherlv_19, grammarAccess.getUncertainElementFusionAccess().getEqualsSignKeyword_18());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUncertainElementFusionAccess().getEpistemicCumulativeBFSBooleanParserRuleCall_19_0());
				}
				lv_epistemicCumulativeBF_20_0=ruleSBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUncertainElementFusionRule());
					}
					set(
						$current,
						"epistemicCumulativeBF",
						lv_epistemicCumulativeBF_20_0,
						"org.xtext.geodes.trustdsl.TrustDSL.SBoolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_21='weightedBF'
		{
			newLeafNode(otherlv_21, grammarAccess.getUncertainElementFusionAccess().getWeightedBFKeyword_20());
		}
		otherlv_22='='
		{
			newLeafNode(otherlv_22, grammarAccess.getUncertainElementFusionAccess().getEqualsSignKeyword_21());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUncertainElementFusionAccess().getWeightedBFSBooleanParserRuleCall_22_0());
				}
				lv_weightedBF_23_0=ruleSBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUncertainElementFusionRule());
					}
					set(
						$current,
						"weightedBF",
						lv_weightedBF_23_0,
						"org.xtext.geodes.trustdsl.TrustDSL.SBoolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_24='}'
		{
			newLeafNode(otherlv_24, grammarAccess.getUncertainElementFusionAccess().getRightCurlyBracketKeyword_23());
		}
	)
;

// Entry rule entryRuleREAL
entryRuleREAL returns [String current=null]:
	{ newCompositeNode(grammarAccess.getREALRule()); }
	iv_ruleREAL=ruleREAL
	{ $current=$iv_ruleREAL.current.getText(); }
	EOF;

// Rule REAL
ruleREAL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getREALAccess().getINTTerminalRuleCall_0());
		}
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getREALAccess().getFullStopKeyword_1());
		}
		this_INT_2=RULE_INT
		{
			$current.merge(this_INT_2);
		}
		{
			newLeafNode(this_INT_2, grammarAccess.getREALAccess().getINTTerminalRuleCall_2());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
