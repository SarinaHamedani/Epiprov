document
prefix prov <http://www.prov.org/>
prefix ex <http://example.org/>

entity(prov:Hunan_Model_Study, [prov:type = 'prov:Collection'])
agent(prov:Hunan_Model_Authors, [prov:label = "Tuite, A. R., Fisman, D. N., & Greer, A. L."])
wasAttributedTo(prov:Hunan_Model_Study, prov:Hunan_Model_Authors)

activity(prov:data_analysis, [prov:type = 'prov:Activity', prov:label = "Statistical Analysis"])
activity(prov:curve_fitting, [prov:type = 'prov:Activity', prov:label = "Curve Fitting Using Berkeley Madonna and Python"])

entity(prov:beta_ii, [prov:type = 'prov:Entity', prov:value = "0.000000001"])
entity(prov:beta_ji, [prov:type = 'prov:Entity', prov:value = "0.000000001"])
entity(prov:beta_jj, [prov:type = 'prov:Entity', prov:value = "0.000000001"])
entity(prov:beta_ij, [prov:type = 'prov:Entity', prov:value = "0.000000001"])
entity(prov:kappa, [prov:type = 'prov:Entity', prov:value = "1.0"])
entity(prov:p, [prov:type = 'prov:Entity', prov:value = "0.2015"])
entity(prov:omega, [prov:type = 'prov:Entity', prov:value = "0.1429"])
entity(prov:gamma, [prov:type = 'prov:Entity', prov:value = "0.2"])
entity(prov:gamma_p, [prov:type = 'prov:Entity', prov:value = "0.2"])
entity(prov:f, [prov:type = 'prov:Entity', prov:value = "0.003552"])

entity(prov:data_hunan, [prov:type = 'prov:Entity', prov:label = "Hunan COVID-19 dataset"])
entity(prov:data_hubei, [prov:type = 'prov:Entity', prov:label = "Hubei CDC fatality data"])
entity(prov:ref_he, [prov:type = 'prov:Entity', prov:label = "He et al. 2020"])
entity(prov:ref_ningbo, [prov:type = 'prov:Entity', prov:label = "Chen et al. 2020, Ningbo"])
entity(prov:ref_uk_report, [prov:type = 'prov:Entity', prov:label = "UK super-spreader report"])
entity(prov:ref_lauer, [prov:type = 'prov:Entity', prov:label = "Lauer et al. 2020"])
entity(prov:ref_guan, [prov:type = 'prov:Entity', prov:label = "Guan et al. 2020"])
entity(prov:ref_mizumoto, [prov:type = 'prov:Entity', prov:label = "Mizumoto et al. 2020"])

agent(prov:ref_he_authors, [prov:type = 'prov:Person', prov:label = "He et al. 2020"])
agent(prov:ref_ningbo_authors, [prov:type = 'prov:Person', prov:label = "Chen et al. 2020, Ningbo"])
agent(prov:ref_uk_report_authors, [prov:type = 'prov:Person', prov:label = "UK super-spreader report"])
agent(prov:ref_lauer_authors, [prov:type = 'prov:Person', prov:label = "Lauer et al. 2020"])
agent(prov:ref_guan_authors, [prov:type = 'prov:Person', prov:label = "Guan et al. 2020"])
agent(prov:ref_mizumoto_authors, [prov:type = 'prov:Person', prov:label = "Mizumoto et al. 2020"])


wasAttributedTo(prov:ref_he, prov:ref_he_authors)
wasAttributedTo(prov:ref_ningbo, prov:ref_ningbo_authors)
wasAttributedTo(prov:ref_uk_report, prov:ref_uk_report_authors)
wasAttributedTo(prov:ref_lauer, prov:ref_lauer_authors)
wasAttributedTo(prov:ref_guan, prov:ref_guan_authors)
wasAttributedTo(prov:ref_mizumoto, prov:ref_mizumoto_authors)


wasGeneratedBy(prov:beta_ii, prov:curve_fitting, -)
wasGeneratedBy(prov:beta_ji, prov:curve_fitting, -)
wasGeneratedBy(prov:beta_jj, prov:curve_fitting, -)
wasGeneratedBy(prov:beta_ij, prov:curve_fitting, -)
wasGeneratedBy(prov:kappa, prov:data_analysis, -)
wasGeneratedBy(prov:p, prov:data_analysis, -)
wasGeneratedBy(prov:omega, prov:curve_fitting, -)
wasGeneratedBy(prov:gamma, prov:curve_fitting, -)
wasGeneratedBy(prov:gamma_p, prov:curve_fitting, -)
wasGeneratedBy(prov:f, prov:data_analysis, -)

used(prov:curve_fitting, prov:data_hunan, -)
used(prov:curve_fitting, prov:data_hubei, -)
used(prov:data_analysis, prov:data_hunan, -)
used(prov:data_analysis, prov:data_hubei, -)

wasDerivedFrom(prov:beta_ii, prov:data_hunan)
wasDerivedFrom(prov:beta_ji, prov:data_hunan)
wasDerivedFrom(prov:beta_jj, prov:data_hunan)
wasDerivedFrom(prov:beta_ij, prov:data_hunan)
wasDerivedFrom(prov:kappa, prov:ref_he)
wasDerivedFrom(prov:kappa, prov:ref_ningbo)
wasDerivedFrom(prov:kappa, prov:ref_uk_report)
wasDerivedFrom(prov:p, prov:data_hunan)
wasDerivedFrom(prov:p, prov:ref_mizumoto)
wasDerivedFrom(prov:p, prov:ref_ningbo)
wasDerivedFrom(prov:omega, prov:data_hunan)
wasDerivedFrom(prov:omega, prov:ref_lauer)
wasDerivedFrom(prov:omega, prov:ref_guan)
wasDerivedFrom(prov:gamma, prov:data_hunan)
wasDerivedFrom(prov:gamma_p, prov:data_hunan)
wasDerivedFrom(prov:f, prov:data_hubei)


hadMember(prov:Hunan_Model_Study,prov:beta_ii) 
hadMember(prov:Hunan_Model_Study,prov:beta_ji)
hadMember(prov:Hunan_Model_Study,prov:beta_jj)
hadMember(prov:Hunan_Model_Study,prov:beta_ji)
hadMember(prov:Hunan_Model_Study,prov:p)
hadMember(prov:Hunan_Model_Study,prov:omega)
hadMember(prov:Hunan_Model_Study,prov:gamma_p)
hadMember(prov:Hunan_Model_Study,prov:gamma)
hadMember(prov:Hunan_Model_Study,prov:f)
hadMember(prov:Hunan_Model_Study,prov:kappa)

endDocument
