rule MergeTrustModels
merge l : Left!TrustModel
with r : Right!TrustModel
into t : Target!TrustModel {

    System.out.println("Merging TrustModels...");

    // Merge elements from left and right trust models, ensuring no duplicates
    t.elements.addAll(l.elements);
    for (element in r.elements.collect(e | e)) {
        if (not t.elements.exists(e | e.name.equalsIgnoreCase(element.name))) {
            t.elements.add(element);
        }
    }
    
    if (t.elements.isEmpty()) {
        var defaultElement = TrustDSLFactory.eINSTANCE.createUncertainElement();
        defaultElement.name = "Default_UncertainElement";
        t.elements.add(defaultElement);
        System.out.println("Added default element to TrustModel.");
    }
    
    var resource = t.eResource;
    resource.getContents().clear();
    resource.getContents().add(t);

    System.out.println("Merged TrustModel with " + t.elements.size() + " elements.");
}




// Merge all UncertainElements into a single UncertainElementFusion
rule MergeUncertainElements
merge l : Left!UncertainElement
with r : Right!UncertainElement
into t : Target!UncertainElement {
	System.out.println("Merged UncertainElements: " + l.name + " and " + r.name);

    t.name = "Fusion_" + l.name + "_" + r.name;
	var resource = t.eResource;

    System.out.println("Merged UncertainElements: " + l.name + " and " + r.name);
}

//// Merge individual beliefs based on agents and opinions
rule MergeBeliefs
merge l : Left!Belief
with r : Right!Belief
into t : Target!Belief {
    t.name = l.name + "_";
    t.agent = l.agent;
    if (l.opinion <> null) {
        t.opinion = l.opinion;
    } else if (r.opinion <> null) {
        t.opinion = r.opinion;
    } else {
        t.opinion = createDefaultOpinion();
    }
    System.out.println("Merged Beliefs: " + l.name + " and " + r.name);
}